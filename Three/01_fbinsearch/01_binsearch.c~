#include <stdio.h>
#include <string.h>

/* binsearch: find x in v[0] <= v[1] ... <= v[n-1] */

int binsearch(int x, int v[], int n);

main(int argc, char *argv[]) 
{
  int BIGCOUNTER = 21474830;
  if (argv[1] == NULL){
    printf("NO!\n");
    return 15;
  }
  if (strcmp(argv[1], "fast") == 0) {
    while (BIGCOUNTER > 0) {
      fbitcount(2147483647);
      BIGCOUNTER--;
    }
  }else if(strcmp(argv[1], "classic") == 0) {
    while (BIGCOUNTER > 0) {
      bitcount(2147483647);
      BIGCOUNTER--;
    }
  }
  printf("bitcount of %d is %d.\n",2147483647, bitcount(2147483647));
  printf("fbitcount of %d is %d.\n",2147483647, fbitcount(2147483647));
  /*printf("bitcount of %d is %d.\n",2147483647, bitcount(2147483647));  
  printf("bitcount of %d is %d.\n",8, bitcount(8));
  printf("fbitcount of %d is %d.\n",8, fbitcount(8));
  printf("bitcount of %d is %d.\n",1, bitcount(1));
  printf("fbitcount of %d is2 %d.\n",1, fbitcount(1));
  printf("bitcount of %d is %d.\n",16, bitcount(16));
  printf("fbitcount of %d is %d.\n",16, fbitcount(16));
  printf("bitcount of %d is %d.\n",15, bitcount(15));
  printf("fbitcount of %d is %d.\n",15, fbitcount(15));
  printf("bitcount of %d is %d.\n",32, bitcount(32));
  printf("fbitcount of %d is %d.\n",32, fbitcount(32));
  printf("bitcount of %d is %d.\n",3, bitcount(3));
  printf("fbitcount of %d is %d.\n",3, fbitcount(3));
  */
  return 0;
}

int binsearch(int x, int v[], int n) {
  int low, mid, high;
  
  low = 0;
  high = n - 1;
  while (low <= high) {
    mid = (low+high)/2;
    if (x<v[mid]) {
      high = mid - 1;
    }else if (x>v[mid]) {
      low = mid + 1;
    }else {
      return mid;
    }
  }
}
